AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation para criar um subdom√≠nio, um CDN no CloudFront para um bucket S3 de imagens.

Parameters:
    Stage:
        Type: String
    Tenant:
        Type: String
    Microservice:
        Type: String
    HostedZoneId:
        Type: AWS::Route53::HostedZone::Id
    DomainName:
        Type: String

Resources:
    S3Bucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: !Sub ${Stage}-${Tenant}-${Microservice}-images
            PublicAccessBlockConfiguration:
                BlockPublicAcls: false
                IgnorePublicAcls: false
                BlockPublicPolicy: false
                RestrictPublicBuckets: false
            Tags:
              - Key: Service
                Value: S3
              - Key: Resource
                Value: Bucket
              - Key: StackName
                Value: !Ref AWS::StackName
              - Key: StackId
                Value: !Ref AWS::StackId
              - Key: Region
                Value: !Ref AWS::Region
              - Key: Microservice
                Value: !Ref Microservice
              - Key: Stage
                Value: !Ref Stage
              - Key: Tenant
                Value: !Ref Tenant
              - Key: Name
                Value: !Sub ${Stage}-${Tenant}-${Microservice}-images

    S3BucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
            Bucket: !Ref S3Bucket
            PolicyDocument:
                Version: "2012-10-17"
                Statement:
                - Sid: "PublicReadGetObject"
                  Effect: Allow
                  Principal: "*"
                  Action: s3:GetObject
                  Resource: !Sub 'arn:aws:s3:::${S3Bucket}/*'

    CloudFrontDistribution:
        Type: AWS::CloudFront::Distribution
        Properties:
            DistributionConfig:
                Aliases:
                     - !Sub products-images.${DomainName}
                Enabled: true
                Comment: 'CDN para imagens de produtos'
                ViewerCertificate:
                     AcmCertificateArn: !Sub ${Stage}-${Tenant}-domain-certificate
                     SslSupportMethod: sni-only 
                Origins:
                - Id: S3Origin
                  DomainName: !GetAtt S3Bucket.RegionalDomainName
                  S3OriginConfig:
                    OriginAccessIdentity: ""
                DefaultCacheBehavior:
                    TargetOriginId: S3Origin
                    ViewerProtocolPolicy: redirect-to-https
                    ForwardedValues:
                        QueryString: false
                        Cookies:
                            Forward: none
                    Compress: true
                PriceClass: PriceClass_100
            Tags:
              - Key: Service
                Value: CloudFront
              - Key: Resource
                Value: Distribution
              - Key: StackName
                Value: !Ref AWS::StackName
              - Key: StackId
                Value: !Ref AWS::StackId
              - Key: Region
                Value: !Ref AWS::Region
              - Key: Microservice
                Value: !Ref Microservice
              - Key: Stage
                Value: !Ref Stage
              - Key: Tenant
                Value: !Ref Tenant
              - Key: Name
                Value: !Sub ${Stage}-${Tenant}-${Microservice}-images

    Route53RecordSet:
        Type: AWS::Route53::RecordSet
        Properties:
            HostedZoneId: !Ref HostedZoneId
            Name: !Sub products-images.${DomainName}
            Type: CNAME
            AliasTarget:
                HostedZoneId: Z2FDTNDATAQYW2  # This is the zone ID for CloudFront
                DNSName: !GetAtt CloudFrontDistribution.DomainName
                EvaluateTargetHealth: false
